(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{659:function(t,a,s){"use strict";s.r(a);var e=s(15),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"jvm参数选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm参数选项"}},[t._v("#")]),t._v(" JVM参数选项")]),t._v(" "),s("blockquote",[s("p",[t._v("官网地址："),s("code",[t._v("https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html")])])]),t._v(" "),s("h3",{attrs:{id:"类型一-标准参数选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型一-标准参数选项"}},[t._v("#")]),t._v(" 类型一：标准参数选项")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("比较稳定，后续版本基本不会变化")]),t._v(" "),s("li",[s("strong",[t._v("以 "),s("code",[t._v("-")]),t._v(" 开头")])])]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("java -help")]),t._v(" 查看所有参数。")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" java -help\n用法: java "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" class "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("执行类"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   或  java "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -jar jarfile "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("执行 jar 文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n其中选项包括:\n    -d32          使用 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" 位数据模型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如果可用"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -d64          使用 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" 位数据模型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如果可用"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -server       选择 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"server"')]),t._v(" VM\n                  默认 VM 是 server.\n\n    -cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("目录和 zip/jar 文件的类搜索路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    -classpath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("目录和 zip/jar 文件的类搜索路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                  用 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 分隔的目录, JAR 档案\n                  和 ZIP 档案列表, 用于搜索类文件。\n    -D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("值"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                  设置系统属性\n    -verbose:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jni"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  启用详细输出\n    -version      输出产品版本并退出\n    -version:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("值"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                  警告: 此功能已过时, 将在\n                  未来发行版中删除。\n                  需要指定的版本才能运行\n    -showversion  输出产品版本并继续\n    -jre-restrict-search "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -no-jre-restrict-search\n                  警告: 此功能已过时, 将在\n                  未来发行版中删除。\n                  在版本搜索中包括/排除用户专用 JRE\n    -? -help      输出此帮助消息\n    -X            输出非标准选项的帮助\n    -ea"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("packagename"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("classname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    -enableassertions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("packagename"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("classname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  按指定的粒度启用断言\n    -da"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("packagename"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("classname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    -disableassertions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("packagename"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("classname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  禁用具有指定粒度的断言\n    -esa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -enablesystemassertions\n                  启用系统断言\n    -dsa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -disablesystemassertions\n                  禁用系统断言\n    -agentlib:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("libname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  加载本机代理库 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("libname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(", 例如 -agentlib:hprof\n                  另请参阅 -agentlib:jdwp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("help 和 -agentlib:hprof"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("help\n    -agentpath:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pathname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  按完整路径名加载本机代理库\n    -javaagent:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jarpath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  加载 Java 编程语言代理, 请参阅 java.lang.instrument\n    -splash:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("imagepath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                  使用指定的图像显示启动屏幕\n有关详细信息, 请参阅 http://www.oracle.com/technetwork/java/javase/documentation/index.html。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br")])]),s("p",[s("strong",[t._v("Server 模式和 Client 模式")])]),t._v(" "),s("blockquote",[s("p",[t._v("官网地址："),s("code",[t._v("https://docs.oracle.com/javase/8/docs/technotes/guides/vm/server-class.html")])])]),t._v(" "),s("p",[t._v("Hotspot JVM 有两种模式，分别是 server 和 client，分别通过 "),s("code",[t._v("-server")]),t._v(" 和 "),s("code",[t._v("-client")]),t._v(" 模式设置")]),t._v(" "),s("ul",[s("li",[t._v("32 位系统上，默认使用 Client 类型的 JVM。要想使用 Server 模式，机器配置至少有 2 个以上的 CPU 和 2G 以上的物理内存。Client 模式适用于对内存要求较小的桌面应用程序，默认使用 Serial 串行垃圾收集器")]),t._v(" "),s("li",[t._v("64 位系统上，只支持 Server 模式的 JVM，适用于需要大内存的应用程序，默认使用并行垃圾收集器")])]),t._v(" "),s("p",[t._v("如何知道系统默认使用的是那种模式呢？")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("java -version")]),t._v(" 命令：可以看到 Server VM 字样，代表当前系统使用是 Server 模式。")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" java -version\njava version "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.8.0_201"')]),t._v("\nJava"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SE Runtime Environment "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),t._v(".0_201-b09"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nJava HotSpot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("-Bit Server VM "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.201")]),t._v("-b09, mixed mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"类型二-x参数选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型二-x参数选项"}},[t._v("#")]),t._v(" 类型二：-X参数选项")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("非标准化参数")]),t._v(" "),s("li",[t._v("功能还是比较稳定的。但官方说后续版本可能会变更")]),t._v(" "),s("li",[s("strong",[t._v("以 -X 开头")])])]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("java -X")]),t._v(" 查看所有参数。")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" java -X\n    -Xmixed           混合模式执行 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -Xint             仅解释模式执行\n    -Xbootclasspath:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("用 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 分隔的目录和 zip/jar 文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                      设置搜索路径以引导类和资源\n    -Xbootclasspath/a:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("用 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 分隔的目录和 zip/jar 文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                      附加在引导类路径末尾\n    -Xbootclasspath/p:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("用 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 分隔的目录和 zip/jar 文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                      置于引导类路径之前\n    -Xdiag            显示附加诊断消息\n    -Xnoclassgc       禁用类垃圾收集\n    -Xincgc           启用增量垃圾收集\n    -Xloggc:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    将 GC 状态记录在文件中 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("带时间戳"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -Xbatch           禁用后台编译\n    -Xms"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        设置初始 Java 堆大小\n    -Xmx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        设置最大 Java 堆大小\n    -Xss"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        设置 Java 线程堆栈大小\n    -Xprof            输出 cpu 配置文件数据\n    -Xfuture          启用最严格的检查, 预期将来的默认值\n    -Xrs              减少 Java/VM 对操作系统信号的使用 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("请参阅文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -Xcheck:jni       对 JNI 函数执行其他检查\n    -Xshare:off       不尝试使用共享类数据\n    -Xshare:auto      在可能的情况下使用共享类数据 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -Xshare:on        要求使用共享类数据, 否则将失败。\n    -XshowSettings    显示所有设置并继续\n    -XshowSettings:all\n                      显示所有设置并继续\n    -XshowSettings:vm 显示所有与 vm 相关的设置并继续\n    -XshowSettings:properties\n                      显示所有属性设置并继续\n    -XshowSettings:locale\n                      显示所有与区域设置相关的设置并继续\n\n-X 选项是非标准选项, 如有更改, 恕不另行通知。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br")])]),s("blockquote",[s("p",[t._v("JVM 的 JIT 编译模式相关的选项")])]),t._v(" "),s("ul",[s("li",[t._v("-Xint：禁用 JIT，所有字节码都被解释执行，这个模式的速度最慢的")]),t._v(" "),s("li",[t._v("-Xcomp：所有字节码第一次使用就都被编译成本地代码，然后再执行")]),t._v(" "),s("li",[t._v("-Xmixed：混合模式，默认模式，让 JIT 根据程序运行的情况，有选择地选择编译模式")])]),t._v(" "),s("blockquote",[s("p",[t._v("-Xmx -Xms -Xss 属于 XX 参数吗？")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("-Xms<size>")]),t._v("：设置初始 Java 堆大小,等价于 "),s("code",[t._v("-XX:InitialHeapsize")])]),t._v(" "),s("li",[s("code",[t._v("-Xmx<size>")]),t._v("：设置最大 Java 堆大小，等价于 "),s("code",[t._v("-XX:MaxHeapSize")])]),t._v(" "),s("li",[s("code",[t._v("-Xss<size>")]),t._v("：设置 Java 线程堆栈大小，等价于 "),s("code",[t._v("-XX:ThreadStackSize")])])]),t._v(" "),s("p",[t._v("如何知道 JVM 默认使用的是混合模式呢？")]),t._v(" "),s("p",[t._v("同样地，通过 "),s("code",[t._v("java -version")]),t._v(" 命令：可以看到 mixed mode 字样，代表当前系统使用的是混合模式。")]),t._v(" "),s("h3",{attrs:{id:"类型三-xx参数选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型三-xx参数选项"}},[t._v("#")]),t._v(" 类型三：-XX参数选项")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("非标准化参数")]),t._v(" "),s("li",[s("strong",[t._v("使用最多的参数类型")])]),t._v(" "),s("li",[t._v("这类选项属于实验性，不稳定")]),t._v(" "),s("li",[s("strong",[t._v("以 -XX 开头")])])]),t._v(" "),s("p",[t._v("作用：用于开发和调式 JVM。")]),t._v(" "),s("blockquote",[s("p",[t._v("分类")])]),t._v(" "),s("p",[s("strong",[t._v("Boolean 类型格式")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+<option>")]),t._v("：启用 option 属性")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:-<option>")]),t._v("：禁用 option 属性")])])]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+UseParallelGC")]),t._v(" 选择垃圾收集器为并行收集器")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseG1GC")]),t._v(" 表示启用 G1 收集器")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseAdaptiveSizePolicy")]),t._v(" 自动选择年轻代区大小和相应的 Survivor 区比例")])])]),t._v(" "),s("p",[t._v("说明：因为有的指令默认是开启的，所以可以使用-关闭")]),t._v(" "),s("p",[s("strong",[t._v("非 Boolean 类型格式（key-value 类型）")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("数值类型格式 "),s("code",[t._v("-XX:<option>=<number>")]),t._v("：")]),t._v(" "),s("p",[t._v("设置 option 数值，number 表示数值，number 可以带上单位，比如: 'm'、'm' 表示兆，'k'、'k'表示 Kb，'g'、'G’ 表示 g（例如：32k 跟 32768 是一样的效果）。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("-XX:NewSize=1024m")]),t._v(" 表示设置新生代初始大小为 1024 兆")]),t._v(" "),s("li",[s("code",[t._v("-XX:MaxGCPauseMillis=500")]),t._v(" 表示设置 GC 停顿时间：500 毫秒")]),t._v(" "),s("li",[s("code",[t._v("-XX:GCTimeRatio=19")]),t._v(" 表示设置吞吐量")]),t._v(" "),s("li",[s("code",[t._v("-XX:NewRatio=2")]),t._v(" 表示新生代与老年代的比例")])])]),t._v(" "),s("li",[s("p",[t._v("非数值类型格式 "),s("code",[t._v("-XX:<option>=<string>")]),t._v("：设置 option 字符值")]),t._v(" "),s("p",[t._v("例如："),s("code",[t._v("-XX:HeapDumpPath=/usr/local/heapdump.hprof")]),t._v(" 用来指定 heap 转存文件的存储路径。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("特别的")])]),t._v(" "),s("p",[s("code",[t._v("-XX:+PrintFlagsFinal")]),t._v(" 参数：")]),t._v(" "),s("ul",[s("li",[t._v("输出所有参数的名称和默认值")]),t._v(" "),s("li",[t._v("默认不包括 Diagnostic 和 Experimental 的参数")]),t._v(" "),s("li",[t._v("可以配合 "),s("code",[t._v("-XX:+UnlockDiagnosticVMOptions")]),t._v(" 和 "),s("code",[t._v("-XX:UnlockExperimentalVMOptions")]),t._v(" 使用")])]),t._v(" "),s("h2",{attrs:{id:"添加jvm参数选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加jvm参数选项"}},[t._v("#")]),t._v(" 添加JVM参数选项")]),t._v(" "),s("p",[t._v("Eclipse 和 Idea 中配置不必多说，在 Run Configurations 中 VM Options 中配置即可，大同小异。")]),t._v(" "),s("blockquote",[s("p",[t._v("运行 jar 包时添加")])]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("java -Xms100m -Xmx100m -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -jar demo.jar\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("Tomcat 运行 war 包中添加")])]),t._v(" "),s("p",[t._v("Linux 下 catalina.sh 添加：")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Linux 下 catalina.sh 添加")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JAVA_OPTS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Xms512M -Xmx1024M"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("Windows 下 catalina.bat 添加")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Windows 下 catalina.bat 添加")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JAVA_OPTS=-Xms512M -Xmx1024M"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("程序运行中添加")])]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 Boolean 类型参数")]),t._v("\njinfo -flag "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置非 Boolean 类型参数")]),t._v("\njinfo -flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"常用的jvm参数选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的jvm参数选项"}},[t._v("#")]),t._v(" 常用的JVM参数选项")]),t._v(" "),s("h3",{attrs:{id:"打印设置的xx选项及值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打印设置的xx选项及值"}},[t._v("#")]),t._v(" 打印设置的XX选项及值")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+PrintCommandLineFlags")]),t._v("：程序运行时 JVM 默认设置或用户手动设置的 XX 选项")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintFlagsInitial")]),t._v("：打印所有 XX 选项的默认值")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintFlagsFinal")]),t._v("：打印所有 XX 选项的实际值")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintVMOptions")]),t._v("：打印 JVM 的参数")])])]),t._v(" "),s("h3",{attrs:{id:"堆、栈、方法区等内存大小设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆、栈、方法区等内存大小设置"}},[t._v("#")]),t._v(" 堆、栈、方法区等内存大小设置")]),t._v(" "),s("blockquote",[s("p",[t._v("栈")])]),t._v(" "),s("p",[s("code",[t._v("-Xss128k 或 -XX:ThreadStackSize=128k")]),t._v("：设置线程栈的大小为 128K。")]),t._v(" "),s("blockquote",[s("p",[t._v("堆")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-Xms2048m <==> -XX:InitialHeapSize=2048m")]),t._v("：设置 JVM 初始堆内存为 2048M")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-Xmx2048m <==> -XX:MaxHeapSize=2048m")]),t._v("：设置 JVM 最大堆内存为 2048M")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-Xmn2g <==> -XX:NewSize=2g -XX:MaxNewSize=2g")]),t._v("：设置年轻代大小为 2G，官方推荐配置为整个堆大小的 3/8")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:SurvivorRatio=8")]),t._v("：设置 Eden 区与 Survivor 区的比值，默认为 8")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:NewRatio=2")]),t._v("：设置老年代与年轻代的比例，默认为 2")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseAdaptiveSizePolicy")]),t._v("：设置大小比例自适应，默认开启")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:PretenureSizeThreadshold=1024")]),t._v("：设置让大于此阈值的对象直接分配在老年代，单位为字节。只对 Serial、ParNew 收集器有效")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:MaxTenuringThreshold=15")]),t._v("：设置新生代晋升老年代的年龄限制，默认为 15。新生代每次 Minor GC 后，还存活的对象年龄 +1，当对象的年龄大于设置的这个值时就进入老年代")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintTenuringDistribution")]),t._v("：让 JVM 在每次 Minor GC 后打印出当前使用的 Survivor 中对象的年龄分布")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:TargetSurvivorRatio")]),t._v("：设置 Minor GC 结束后 Survivor 区占用空间的期望比例")])])]),t._v(" "),s("p",[s("strong",[t._v("说明：")])]),t._v(" "),s("p",[t._v("虽然官方说 Eden 区与 Survivor 区的比值为 8:1:1，但是利用 Visual VM 工具看是 6:1:1，如果想真正达到 8:1:1，则需要显示赋值："),s("code",[t._v("-XX:SurvivorRatio=8")]),t._v("。当然建议不用，因为 JVM 会自适应调整。")]),t._v(" "),s("blockquote",[s("p",[t._v("方法区")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:MetaspaceSize / -XX:PermSize=256m")]),t._v("：设置元空间/永久代初始值为 256M")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:MaxMetaspaceSize / -XX:MaxPermSize=256m")]),t._v("：设置元空间/永久代最大值为 256M")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseCompressedOops")]),t._v("：使用压缩对象")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseCompressedClassPointers")]),t._v("：使用压缩类指针")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:CompressedClassSpaceSize")]),t._v("：设置 Klass Metaspace 的大小，默认 1G")])])]),t._v(" "),s("blockquote",[s("p",[t._v("直接内存")])]),t._v(" "),s("p",[s("code",[t._v("-XX:MaxDirectMemorySize")]),t._v("：指定 DirectMemory 容量，默认等于 Java 堆最大值。")]),t._v(" "),s("h3",{attrs:{id:"outofmemory相关的选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#outofmemory相关的选项"}},[t._v("#")]),t._v(" OutOfMemory相关的选项")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+HeapDumpOnOutMemoryError")]),t._v("：内存出现 OOM 时生成 Heap 转储文件，两者互斥")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+HeapDumpBeforeFullGC")]),t._v("：出现 Full GC 时生成 Heap 转储文件，两者互斥")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:HeapDumpPath=<path>")]),t._v("：指定 Heap 转储文件的存储路径，默认当前目录")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:OnOutOfMemoryError=<path>")]),t._v("：指定可行性程序或脚本的路径，当发生 OOM 时执行脚本")])])]),t._v(" "),s("h3",{attrs:{id:"垃圾收集器相关选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集器相关选项"}},[t._v("#")]),t._v(" 垃圾收集器相关选项")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116170202.png",alt:""}})]),t._v(" "),s("p",[t._v("首先需了解垃圾收集器之间的搭配使用关系：")]),t._v(" "),s("ul",[s("li",[t._v("红色虚线表示在 JDK8 时被 Deprecate，JDK9 时被删除")]),t._v(" "),s("li",[t._v("绿色虚线表示在 JDK14 时被 Deprecate")]),t._v(" "),s("li",[t._v("绿色虚框表示在 JDK9 时被 Deprecate，JDK14 时被删除")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220201213730.png",alt:"image-20210506182458663"}})]),t._v(" "),s("blockquote",[s("p",[t._v("查看默认垃圾收集器")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("XX:+PrintCommandLineFlags")]),t._v("：查看命令行相关参数（包含使用的垃圾收集器)")]),t._v(" "),s("li",[t._v("使用命令行指令："),s("code",[t._v("jinfo - flag 相关垃圾回收器参数 进程ID")])])]),t._v(" "),s("blockquote",[s("p",[t._v("Serial 回收器")])]),t._v(" "),s("p",[t._v("Serial 收集器作为 HotSpot 中 Client 模式下的默认新生代垃圾收集器。Serial Old 是运行在 Client 模式下默认的老年代的垃圾回收器。")]),t._v(" "),s("p",[s("code",[t._v("-XX:+UseSerialGC")]),t._v("：指定年轻代和老年代都使用串行收集器。等价于新生代用 Serial GC，且老年代用 Serial Old GC。可以获得最高的单线程收集效率。")]),t._v(" "),s("blockquote",[s("p",[t._v("ParNew 回收器")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+UseParNewGC")]),t._v("：手动指定使用 ParNew 收集器执行内存回收任务。它表示年轻代使用并行收集器，不影响老年代")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ParallelGCThreads=N")]),t._v("：设置年轻代并行收集器的线程数，默认开启和 CPU 数据相同的线程数")]),t._v(" "),s("p",[t._v("一般地，最好与 CPU 数量相等，以避免过多的线程数影响垃圾收集性能。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("Parallel 回收器")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+UseParallelGC")]),t._v("：年轻代使用 Parallel Scavenge GC，互相激活")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseParallelOldGC")]),t._v("：老年代使用 Parallel Old GC，互相激活")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ParallelGCThreads")]),t._v("： 设置年轻代并行收集器的线程数。一般地，最好与 CPU 数量相等，以避免过多的线程数影响垃圾收集性能")]),t._v(" "),s("p",[t._v("在默认情况下，当 CPU 数量小于 8 个，ParallelGCThreads 的值等于 CPU 数量。")]),t._v(" "),s("p",[t._v("当 CPU 数量大于 8 个，ParallelGCThreads 的值等于 "),s("code",[t._v("3 + [5 * CPU_Count] / 8]")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:MaxGCPauseMillis")]),t._v("：设置垃圾收集器最大停顿时间（即 STW 的时间），单位是毫秒")]),t._v(" "),s("p",[t._v("为了尽可能地把停顿时间控制在 MaxGCPauseMills 以内，收集器在工作时会调整 Java 堆大小或者其他一些参数。")]),t._v(" "),s("p",[t._v("对于用户来讲，停顿时间越短体验越好；但是服务器端注重高并发，整体的吞吐量。")]),t._v(" "),s("p",[t._v("所以服务器端适合 Parallel，进行控制。该参数使用需谨慎。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:GCTimeRatio")]),t._v("：垃圾收集时间占总时间的比例（1 / (N＋1)），用于衡量吞吐量的大小")]),t._v(" "),s("p",[t._v("取值范围（0,100），默认值 99，也就是垃圾回收时间不超过 1％。")]),t._v(" "),s("p",[t._v("与前一个 "),s("code",[t._v("-XX:MaxGCPauseMillis")]),t._v(" 参数有一定矛盾性。暂停时间越长，Radio 参数就容易超过设定的比例。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseAdaptiveSizePolicy")]),t._v("：设置 Parallel Scavenge 收集器具有 "),s("strong",[t._v("自适应调节策略")])]),t._v(" "),s("p",[t._v("在这种模式下，年轻代的大小、Eden 和 Survivor 的比例、晋升老年代的对象年龄等参数会被自动调整，以达到在堆大小、吞吐量和停顿时间之间的平衡点。")]),t._v(" "),s("p",[t._v("在手动调优比较困难的场合，可以直接使用这种自适应的方式，仅指定虚拟机的最大堆、目标的吞吐量（GCTimeRatio）和停顿时间（MaxGCPauseMills），让虚拟机自己完成调优工作。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("CMS 回收器")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+UseConcMarkSweepGC")]),t._v("：年轻代使用 CMS GC")]),t._v(" "),s("p",[t._v("开启该参数后会自动将 "),s("code",[t._v("-XX：＋UseParNewGC")]),t._v(" 打开。即：ParNew（Young 区）+ CMS（Old 区）+ Serial Old 的组合。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:CMSInitiatingOccupanyFraction")]),t._v("：设置堆内存使用率的阈值，一旦达到该阈值，便开始进行回收。JDK5 及以前版本的默认值为 68，JDK6 及以上版本默认值为 92％")]),t._v(" "),s("p",[t._v("如果内存增长缓慢，则可以设置一个稍大的值，大的阈值可以有效降低 CMS 的触发频率，减少老年代回收的次数可以较为明显地改善应用程序性能。")]),t._v(" "),s("p",[t._v("反之，如果应用程序内存使用率增长很快，则应该降低这个阈值，以避免频繁触发老年代串行收集器。")]),t._v(" "),s("p",[t._v("因此通过该选项便可以有效降低 Fu1l GC 的执行次数。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseCMSInitiatingOccupancyOnly")]),t._v("：是否动态可调，使 CMS 一直按 CMSInitiatingOccupancyFraction 设定的值启动")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseCMSCompactAtFullCollection")]),t._v("：用于指定在执行完 Full GC 后对内存空间进行压缩整理")]),t._v(" "),s("p",[t._v("以此避免内存碎片的产生。不过由于内存压缩整理过程无法并发执行，所带来的问题就是停顿时间变得更长了。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:CMSFullGCsBeforeCompaction")]),t._v("：设置在执行多少次 Full GC 后对内存空间进行压缩整理")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ParallelCMSThreads")]),t._v("：设置 CMS 的线程数量")]),t._v(" "),s("p",[t._v("CMS 默认启动的线程数是 "),s("code",[t._v("(ParallelGCThreads + 3) / 4")]),t._v("，ParallelGCThreads 是年轻代并行收集器的线程数。")]),t._v(" "),s("p",[t._v("当 CPU 资源比较紧张时，受到 CMS 收集器线程的影响，应用程序的性能在垃圾回收阶段可能会非常糟糕。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ConcGCThreads")]),t._v("：设置并发垃圾收集的线程数，默认该值是基于 ParallelGCThreads 计算出来的")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+CMSScavengeBeforeRemark")]),t._v("：强制在CMS Remark 阶段之前做一次 Minor GC，用于提高 remark 阶段的速度")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+CMSClassUnloadingEnable")]),t._v("：如果有的话，启用回收 Perm 区（JDK8 之前）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+CMSParallelInitialEnabled")]),t._v("：用于开启 CMS initial-mark 阶段采用多线程的方式进行标记")]),t._v(" "),s("p",[t._v("用于提高标记速度，在 Java8 开始已经默认开启")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+CMSParallelRemarkEnabled")]),t._v("：用户开启 CMS remark 阶段采用多线程的方式进行重新标记，默认开启")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+ExplicitGCInvokesConcurrent")]),t._v("、"),s("code",[t._v("-XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses")]),t._v("：这两个参数用户指定 HotSpot 虚拟在执行 "),s("code",[t._v("System.gc()")]),t._v(" 时使用 CMS 周期")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+CMSPrecleaningEnabled")]),t._v("：指定 CMS 是否需要进行 Pre cleaning 阶段")])])]),t._v(" "),s("p",[t._v("JDK9 新特性：CMS 被标记为 Deprecate 了（JEP291）")]),t._v(" "),s("p",[t._v("如果对 JDK 9 及以上版本的 HotSpot 虚拟机使用参数 "),s("code",[t._v("-XX:+UseConcMarkSweepGC")]),t._v(" 来开启 CMS 收集器的话，用户会收到一个警告信息，提示 CMS 未来将会被废弃。")]),t._v(" "),s("p",[t._v("JDK14 新特性：删除 CMS 垃圾回收器（JEP363），移除了 CMS 垃圾收集器，如果在 JDK14 中使用 "),s("code",[t._v("-XX:+UseConcMarkSweepGC")]),t._v(" 的话，JVM 不会报错，只是给出一个 warning 信息，但是不会 exit。JVM 会自动回退以默认 GC 方式启动 JVM。")]),t._v(" "),s("blockquote",[s("p",[t._v("G1 回收器")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+UseG1GC")]),t._v("：手动指定使用 G1 收集器执行内存回收任务")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:G1HeapRegionSize")]),t._v("：设置每个 Region 的大小")])])]),t._v(" "),s("p",[t._v("​\t值是 2 的幂，范围是 1MB 到 32MB 之间，目标是根据最小的 Java 堆大小划分出约 2048 个区域。默认是堆内存的 1/2000。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:MaxGCPauseMillis")]),t._v("：设置期望达到的最大 GC 停顿时间指标（JVM 会尽力实现，但不保证达到）。默认值是 200ms")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ParallelGCThread")]),t._v("：设置 STW 时 GC 线程数的值。最多设置为 8")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ConcGCThreads")]),t._v("：设置并发标记的线程数。将 n 设置为并行垃圾回收线程数（ParallelGCThreads）的 1/4 左右")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:InitiatingHeapOccupancyPercent")]),t._v("：设置触发并发 GC 周期的 Java 堆占用率阈值。超过此值，就触发 GC。默认值是 45")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:G1NewSizePercent")]),t._v("：新生代占用整个堆内存的最小百分比（默认 5％）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:G1MaxNewSizePercent")]),t._v("：新生代占用整个堆内存的最大百分比（默认 60％）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:G1ReservePercent=10")]),t._v("：保留内存区域，防止 to space（Survivor 中的 to 区）溢出")])])]),t._v(" "),s("p",[t._v("怎么选择垃圾回收器？")]),t._v(" "),s("ul",[s("li",[t._v("优先让 JVM 自适应，调整堆的大小")]),t._v(" "),s("li",[t._v("串行收集器：内存小于 100M；单核、单机程序，并且没有停顿时间的要求")]),t._v(" "),s("li",[t._v("并行收集器：多 CPU、高吞吐量、允许停顿时间超过 1 秒")]),t._v(" "),s("li",[t._v("并发收集器：多 CPU、追求低停顿时间、快速响应（比如延迟不能超过 1 秒，如互联网应用）")]),t._v(" "),s("li",[t._v("官方推荐 G1，性能高。"),s("strong",[t._v("现在互联网的项目，基本都是使用 G1")])])]),t._v(" "),s("p",[t._v("特别说明：")]),t._v(" "),s("ul",[s("li",[t._v("没有最好的收集器，更没有万能的收集器")]),t._v(" "),s("li",[t._v("调优永远是针对特定场景、特定需求，不存在一劳永逸的收集器")])]),t._v(" "),s("h3",{attrs:{id:"gc日志相关选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gc日志相关选项"}},[t._v("#")]),t._v(" GC日志相关选项")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+PrintGC 或 -verbose:gc")]),t._v("：打印简要日志信息")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintGCDetails")]),t._v("：在发生垃圾回收时打印内存回收详细的日志，并在进程退出时输出当前内存各区域分配情况（可独立使用）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintGCTimeStamps")]),t._v("：打印程序启动到 GC 发生的时间，搭配 "),s("code",[t._v("-XX:+PrintGCDetails")]),t._v(" 使用")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintGCDateStamps")]),t._v("：打印 GC 发生时的时间戳（以日期的形式，如2013-05-04T21:53:59.234+0800），搭配 "),s("code",[t._v("-XX:+PrintGCDetails")]),t._v(" 使用")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-Xloggc:<file>")]),t._v("：输出 GC 导指定路径下的文件中")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintHeapAtGC")]),t._v("：打印 GC 前后的堆信息，如下图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220201222518.png",alt:"image-20210506195156935"}})])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+TraceClassLoading")]),t._v("：监控类的加载")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintGCApplicationStoppedTime")]),t._v("：打印 GC 时线程的停顿时间")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintGCApplicationConcurrentTime")]),t._v("：打印垃圾收集之前应用未中断的执行时间")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintReferenceGC")]),t._v("：打印回收了多少种不同引用类型的引用")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintTenuringDistribution")]),t._v("：打印 JVM 在每次 Minor GC 后当前使用的 Survivor 中对象的年龄分布")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseGCLogFileRotation")]),t._v("：启用 GC 日志文件的自动转储")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:NumberOfGCLogFiles=1")]),t._v("：设置 GC 日志文件的循环数目")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:GCLogFileSize=1M")]),t._v("：设置 GC 日志文件的大小")])])]),t._v(" "),s("h3",{attrs:{id:"其他参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他参数"}},[t._v("#")]),t._v(" 其他参数")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-XX:+DisableExplicitGC")]),t._v("：禁用 HotSpot 执行 "),s("code",[t._v("System.gc()")]),t._v("，默认禁用")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:ReservedCodeCacheSize=<n>[g|m|k]、-XX:InitialCodeCacheSize=<n>[g|m|k]")]),t._v("：指定代码缓存的大小")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseCodeCacheFlushing")]),t._v("：放弃一些被编译的代码，避免代码缓存被占满时 JVM 切换到 interpreted-only 的情况")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+DoEscapeAnalysis")]),t._v("：开启逃逸分析")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseBiasedLocking")]),t._v("：开启偏向锁")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+UseLargePages")]),t._v("：开启使用大页面")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:+PrintTLAB")]),t._v("：打印 TLAB 的使用情况")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-XX:TLABSize")]),t._v("：设置 TLAB 大小")])])]),t._v(" "),s("h2",{attrs:{id:"jvm所有参数总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm所有参数总结"}},[t._v("#")]),t._v(" JVM所有参数总结")]),t._v(" "),s("blockquote",[s("p",[t._v("打印设置的 XX 选项及值")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("选项")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+PrintCommandLineFlags")]),t._v(" "),s("td",[t._v("程序运行时 JVM 默认设置或用户手动设置的 XX 选项")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+PrintFlagsInitial")]),t._v(" "),s("td",[t._v("打印所有 XX 选项的默认值")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+PrintFlagsFinal")]),t._v(" "),s("td",[t._v("打印所有 XX 选项的实际值")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+PrintVMOptions")]),t._v(" "),s("td",[t._v("打印 JVM 的参数")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("堆、栈、方法区等内存大小设置")])]),t._v(" "),s("p",[s("strong",[t._v("栈")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-Xss128k 或 -XX:ThreadStackSize=128k")]),t._v(" "),s("td",[t._v("设置线程栈的大小为 128K")])])])]),t._v(" "),s("p",[s("strong",[t._v("堆")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-Xms2048m 或 -XX:InitialHeapSize=2048m")]),t._v(" "),s("td",[t._v("设置 JVM 初始堆内存为 2048M")])]),t._v(" "),s("tr",[s("td",[t._v("-Xmx2048m 或 -XX:MaxHeapSize=2048m")]),t._v(" "),s("td",[t._v("设置 JVM 最大堆内存为 2048M")])]),t._v(" "),s("tr",[s("td",[t._v("-Xmn2g 或 -XX:NewSize=2g -XX:MaxNewSize=2g")]),t._v(" "),s("td",[t._v("设置年轻代大小为 2G，官方推荐配置为整个堆大小的 3/8")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:SurvivorRatio=8")]),t._v(" "),s("td",[t._v("设置 Eden 区与 Survivor 区的比值，默认为 8")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:NewRatio=2")]),t._v(" "),s("td",[t._v("设置老年代与年轻代的比例（包括 1 个 Eden 和 2 个 Survivor 区），默认为 2")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseAdaptiveSizePolicy")]),t._v(" "),s("td",[t._v("设置大小比例自适应，默认开启")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:PretenureSizeThreadshold=1024")]),t._v(" "),s("td",[t._v("设置让大于此阈值的对象直接分配在老年代，只对 Serial、ParNew 收集器有效")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:MaxTenuringThreshold=15")]),t._v(" "),s("td",[t._v("设置新生代晋升老年代的年龄限制，默认为 15")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:TargetSurvivorRatio")]),t._v(" "),s("td",[t._v("设置 Minor GC 结束后 Survivor 区占用空间的期望比例")])])])]),t._v(" "),s("p",[s("strong",[t._v("方法区")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:MetaspaceSize / -XX:PermSize=256m")]),t._v(" "),s("td",[t._v("设置元空间/永久代初始值为 256M")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:MaxMetaspaceSize / -XX:MaxPermSize=256m")]),t._v(" "),s("td",[t._v("设置元空间/永久代最大值为 256M")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseCompressedOops")]),t._v(" "),s("td",[t._v("使用压缩对象")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseCompressedClassPointers")]),t._v(" "),s("td",[t._v("使用压缩类指针")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:CompressedClassSpaceSize")]),t._v(" "),s("td",[t._v("设置 Klass Metaspace 的大小，默认 1G")])])])]),t._v(" "),s("p",[s("strong",[t._v("直接内存")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:MaxDirectMemorySize")]),t._v(" "),s("td",[t._v("指定 DirectMemory 容量，默认等于 Java 堆最大值")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("OutOfMemory 相关的选项")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+HeapDumpOnOutMemoryError")]),t._v(" "),s("td",[t._v("内存出现 OOM 时生成 Heap 转储文件，两者互斥")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+HeapDumpBeforeFullGC")]),t._v(" "),s("td",[t._v("现 Full GC 时生成 Heap 转储文件，两者互斥")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:HeapDumpPath=<path>")]),t._v(" "),s("td",[t._v("指定 Heap 转储文件的存储路径，默认当前目录")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:OnOutOfMemoryError=<path>")]),t._v(" "),s("td",[t._v("指定可行性程序或脚本的路径，当发生 OOM 时执行脚本")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("垃圾收集器相关选项")])]),t._v(" "),s("p",[s("strong",[t._v("查看默认垃圾收集器")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("XX:+PrintCommandLineFlags")]),t._v(" "),s("td",[t._v("查看命令行相关参数（包含使用的垃圾收集器)")])]),t._v(" "),s("tr",[s("td",[t._v("jinfo - flag 相关垃圾回收器参数 进程ID")]),t._v(" "),s("td",[t._v("查看参数被使用还是禁用")])])])]),t._v(" "),s("p",[s("strong",[t._v("Serial 回收器")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+UseSerialGC")]),t._v(" "),s("td",[t._v("指定年轻代和老年代都使用串行收集器。等价于新生代用 Serial GC，且老年代用 Serial Old GC")])])])]),t._v(" "),s("p",[s("strong",[t._v("ParNew 回收器")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+UseParNewGC")]),t._v(" "),s("td",[t._v("手动指定使用 ParNew 收集器执行内存回收任务。它表示年轻代使用并行收集器，不影响老年代")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:ParallelGCThreads=N")]),t._v(" "),s("td",[t._v("设置年轻代并行收集器的线程数，默认开启和 CPU 数据相同的线程数")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("strong",[t._v("Parallel 回收器")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+UseParallelGC")]),t._v(" "),s("td",[t._v("年轻代使用 Parallel Scavenge GC，互相激活")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseParallelOldGC")]),t._v(" "),s("td",[t._v("老年代使用 Parallel Old GC，互相激活")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:ParallelGCThreads")]),t._v(" "),s("td",[t._v("设置年轻代并行收集器的线程数。一般地，最好与 CPU 数量相等，以避免过多的线程数影响垃圾收集性能")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:MaxGCPauseMillis")]),t._v(" "),s("td",[t._v("设置垃圾收集器最大停顿时间（即 STW 的时间），单位是毫秒")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:GCTimeRatio")]),t._v(" "),s("td",[t._v("垃圾收集时间占总时间的比例（1 / (N＋1)），用于衡量吞吐量的大小")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseAdaptiveSizePolicy")]),t._v(" "),s("td",[t._v("设置 Parallel Scavenge 收集器具有自适应调节策略")])])])]),t._v(" "),s("p",[s("strong",[t._v("CMS 回收器")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+UseConcMarkSweepGC")]),t._v(" "),s("td",[t._v("年轻代使用 CMS GC")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:CMSInitiatingOccupanyFraction")]),t._v(" "),s("td",[t._v("设置堆内存使用率的阈值，一旦达到该阈值，便开始进行回收")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseCMSInitiatingOccupancyOnly")]),t._v(" "),s("td",[t._v("是否动态可调，使 CMS 一直按 CMSInitiatingOccupancyFraction 设定的值启动")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+UseCMSCompactAtFullCollection")]),t._v(" "),s("td",[t._v("用于指定在执行完 Full GC 后对内存空间进行压缩整理")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:CMSFullGCsBeforeCompaction")]),t._v(" "),s("td",[t._v("设置在执行多少次 Full GC 后对内存空间进行压缩整理")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:ParallelCMSThreads")]),t._v(" "),s("td",[t._v("设置 CMS 的线程数量")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:ConcGCThreads")]),t._v(" "),s("td",[t._v("设置并发垃圾收集的线程数，默认该值是基于 ParallelGCThreads 计算出来的")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+CMSScavengeBeforeRemark")]),t._v(" "),s("td",[t._v("强制在CMS Remark 阶段之前做一次 Minor GC，用于提高 remark 阶段的速度")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+CMSClassUnloadingEnable")]),t._v(" "),s("td",[t._v("如果有的话，启用回收 Perm 区（JDK8 之前）")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+CMSParallelInitialEnabled")]),t._v(" "),s("td",[t._v("用于开启 CMS initial-mark 阶段采用多线程的方式进行标记")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+CMSParallelRemarkEnabled")]),t._v(" "),s("td",[t._v("用户开启 CMS remark 阶段采用多线程的方式进行重新标记，默认开启")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+ExplicitGCInvokesConcurrent、-XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses")]),t._v(" "),s("td",[t._v("这两个参数用户指定 HotSpot 虚拟在执行 "),s("code",[t._v("System.gc()")]),t._v(" 时使用 CMS 周期")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:+CMSPrecleaningEnabled")]),t._v(" "),s("td",[t._v("指定 CMS 是否需要进行 Pre cleaning 阶段")])])])]),t._v(" "),s("p",[s("strong",[t._v("G1 回收器")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-XX:+UseG1GC")]),t._v(" "),s("td",[t._v("手动指定使用 G1 收集器执行内存回收任务")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:G1HeapRegionSize")]),t._v(" "),s("td",[t._v("设置每个 Region 的大小")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:MaxGCPauseMillis")]),t._v(" "),s("td",[t._v("设置期望达到的最大 GC 停顿时间指标（JVM 会尽力实现，但不保证达到）。默认值是 200ms")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:ParallelGCThread")]),t._v(" "),s("td",[t._v("设置 STW 时 GC 线程数的值。最多设置为 8")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:ConcGCThreads")]),t._v(" "),s("td",[t._v("设置并发标记的线程数。将 n 设置为并行垃圾回收线程数（ParallelGCThreads）的 1/4 左右")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:InitiatingHeapOccupancyPercent")]),t._v(" "),s("td",[t._v("设置触发并发 GC 周期的 Java 堆占用率阈值。超过此值，就触发 GC。默认值是 45")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:G1NewSizePercent")]),t._v(" "),s("td",[t._v("新生代占用整个堆内存的最小百分比（默认 5％）")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:G1MaxNewSizePercent")]),t._v(" "),s("td",[t._v("新生代占用整个堆内存的最大百分比（默认 60％）")])]),t._v(" "),s("tr",[s("td",[t._v("-XX:G1ReservePercent=10")]),t._v(" "),s("td",[t._v("保留内存区域，防止 to space（Survivor 中的 to 区）溢出")])])])]),t._v(" "),s("h2",{attrs:{id:"通过java代码获取jvm参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过java代码获取jvm参数"}},[t._v("#")]),t._v(" 通过Java代码获取JVM参数")]),t._v(" "),s("p",[t._v("Java 提供了 "),s("code",[t._v("java.lang.management")]),t._v(" 包用于监视和管理 Java 虚拟机和 Java 运行时中的其他组件，它允许本地或远程监控和管理运行的 Java 虚拟机。其中 ManagementFactory 类较为常用，另外 Runtime 类可获取内存、CPU 核数等相关的数据。")]),t._v(" "),s("p",[t._v("通过使用这些 API，可以监控应用服务器的堆内存使用情况，设置一些阈值进行报警等处理。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryMonitor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryMXBean")]),t._v(" memorymbean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ManagementFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMemoryMXBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemoryUsage")]),t._v(" usage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" memorymbean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeapMemoryUsage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INIT HEAP: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" usage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MAX HEAP: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" usage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"USE HEAP: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" usage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUsed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\nFull Information:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Heap Memory Usage: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" memorymbean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeapMemoryUsage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Non-Heap Memory Usage: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" memorymbean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNonHeapMemoryUsage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=======================通过java来获取相关系统状态============================ "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前堆内存大小totalMemory "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runtime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRuntime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("totalMemory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前堆内存大小")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"空闲堆内存大小freeMemory "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runtime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRuntime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeMemory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空闲堆内存大小")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最大可用总堆内存maxMemory "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runtime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRuntime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxMemory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大可用总堆内存大小")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);